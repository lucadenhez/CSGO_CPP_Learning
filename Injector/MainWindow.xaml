<Window x:Name="Window" x:Class="KarambitInnit.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:KarambitInnit"
        mc:Ignorable="d"
        Title="KarambitInnit - v0.0.1" Height="450" Width="800" Background="#FF343434">
    <Window.Resources></Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="628*"/>
            <ColumnDefinition Width="39*"/>
            <ColumnDefinition Width="125*"/>
        </Grid.ColumnDefinitions>
        <Grid.Background>
            <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                <GradientStop Color="#FFC18451" Offset="0.084"/>
                <GradientStop Color="#FF272727" Offset="0.882"/>
            </LinearGradientBrush>
        </Grid.Background>
        <Label Content="KarambitInnit" HorizontalAlignment="Left" Margin="38,24,0,0" VerticalAlignment="Top" FontSize="48"/>
        <Label Content="&quot;That's a karambit innit brov? Nah bruv, it's a client sided cheat built with C# and C++&quot;" HorizontalAlignment="Left" Margin="49,90,0,0" VerticalAlignment="Top" FontSize="16" FontStyle="Italic" Grid.ColumnSpan="2"/>
        <Button Content="Inject" HorizontalAlignment="Left" Margin="526,323,0,0" VerticalAlignment="Top" Width="213" Height="59" BorderBrush="#FFDA7611" Background="#FF2C2C2C" Foreground="#FFDADADA" Click="Button_Click" Cursor="Hand" Grid.ColumnSpan="3">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                            <Setter Property="Foreground" Value="#FF838383"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <RadioButton Content="Karambit" HorizontalAlignment="Left" Margin="422,330,0,0" VerticalAlignment="Top" FontSize="16" IsChecked="True" Foreground="#FFBBBBBB"/>
        <RadioButton Content="Balisong" HorizontalAlignment="Left" Margin="422,355,0,0" VerticalAlignment="Top" FontSize="16" Foreground="#FFC9C9C9"/>
        <TextBox x:Name="Verbose" IsReadOnly="True" HorizontalAlignment="Left" Height="135" Margin="38,157,0,0" TextWrapping="Wrap" Text="[ Injection Verbose will Output Here: ]" VerticalAlignment="Top" Width="561" Background="#FF2E2E2E" Foreground="#FFF0F0F0" FontSize="14" TextDecorations="{x:Null}" TextChanged="Verbose_TextChanged"/>
        <Rectangle HorizontalAlignment="Left" Height="165" Margin="21,142,0,0" Stroke="Black" VerticalAlignment="Top" Width="595" Panel.ZIndex="-1" Fill="#FF272727" Opacity="0.3" RadiusX="11" RadiusY="11"/>
        <Rectangle HorizontalAlignment="Left" Height="63" Margin="416,321,0,0" Stroke="#FF3A3A3A" VerticalAlignment="Top" Width="98" Panel.ZIndex="-1" Fill="#FF272727" Opacity="0.7" RadiusX="11" RadiusY="11"/>
        <Image HorizontalAlignment="Left" Height="58" Margin="12,338,0,0" VerticalAlignment="Top" Width="275" Source="unnamed.png" MouseDown="Image_MouseDown" Cursor="Hand"/>
        <Button x:Name="chooseDLLbutton" Content="Choose DLL" HorizontalAlignment="Left" Margin="84,356,0,0" VerticalAlignment="Top" Width="89" Height="34" BorderBrush="#FFDA7611" Background="#FF2C2C2C" Foreground="#FFDADADA" Click="dllSelectButton_Click" Cursor="Hand">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                            <Setter Property="Foreground" Value="#FF838383"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>

    </Grid>
</Window>
